
# DOCUMENTACIÓN OFICIAL
https://demos.creative-tim.com/argon-dashboard-django/docs/getting-started/getting-started-django.html?_ga=2.33541694.1858246354.1740671994-1663602739.1740245644

# Primero, vamos a validar si tenemos Python instalado en nuestro sistema (DEBEMOS TENER LA VERSIÓN 12 O INFERIOR):
python --version
o py --version

# Para instalar Python en nuestra estación de trabajo Windows, se deben seguir unos sencillos pasos:
Vaya a la página de descarga oficial (https://www.python.org/downloads/), utilizando un navegador web.
Seleccione el instalador que coincida con el sistema operativo (32b o 64b)
Ejecutar el instalador (usando las opciones predeterminadas, debería ser suficiente en la mayoría de los casos)

# También validamos si tenemos Git instalado:
git –-version
o git version

# Para instalr Git en Windows:
Vaya a la página de descarga oficial (https://git-scm.com/downloads)

# Creamos el ambiente virtual:
pip install virtualenv
python -m virtualenv env
virtualenv --no-site-packages env
o virtualenv env


# Y lo activamos:
.\env\Scripts\activate

# Install modules - SQLite Database:
pip3 install -r requirements.txt

# Instalar PostgreSQL (este ya instala pgAdmin y otras herramientas necesarias)
En las páginas oficiales se descargan e instalan sus setup (https://www.enterprisedb.com/downloads/postgres-postgresql-downloads)

# Configurar el settings.py con la base de datos:

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'sintra',
        'USER': 'postgres',
        'PASSWORD': 'D3v3l0pm3nt',
        'HOST': 'localhost',
        'PORT': 5432
    },
}

pip install psycopg2==2.9.10


# Luego correr migraciones:
python manage.py makemigrations


# Si hay errores relacionados con psycopg2, se instala desde requirements.txt; pero si tmabién hay errores,
entonces se ejecuta la instalación sola:

pip install psycopg2

# Y migramos:
python manage.py migrate

# Correr proyecto
python manage.py runserver


---------------------------------------------
# Correr desde Docker:
docker-compose --version
docker-compose pull && docker-compose build && docker-compose up -d
o docker-compose pull; docker-compose build; docker-compose up -d


----------------------------------------------

# Crear nuevas aplicaciones:
python manage.py startapp compras


prueba de commit in
